@model WebSiteBanHang.Models.NGUOIDUNG

@{
    ViewBag.Title = "SuaThongTin";
    Layout = "~/Views/Layout/ProductLayout.cshtml";
}

<h2>Chỉnh Sửa Thông Tin</h2>
@using (Html.BeginForm("SuaThongTin", "KhachHang", FormMethod.Post, new { @onsubmit = "return IsCheck()"}))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.MaNguoiDung, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.MaNguoiDung, "", new { @class = "text-danger" })

        <div class="form-group">
            <label class="control-label col-md-2">Họ</label>
            <div class="col-md-6">
                @Html.EditorFor(model => model.Ho, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ho, "", new { @class = "text-danger" })
            </div>
            <span class="col-md-4" id="ho"></span>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Tên Lót</label>
            <div class="col-md-6">
                @Html.EditorFor(model => model.TenLot, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TenLot, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Tên</label>
            <div class="col-md-6">
                @Html.EditorFor(model => model.Ten, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ten, "", new { @class = "text-danger" })
            </div>
            <span class="col-md-4" id="ten"></span>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Số Điện Thoại</label>
            <div class="col-md-6">
                @Html.EditorFor(model => model.SoDienThoai, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SoDienThoai, "", new { @class = "text-danger" })
            </div>
            <span class="col-md-4" id="sdt"></span>
        </div>

        @{
            var selectList = new SelectList(
                new List<SelectListItem>
                {
                    new SelectListItem {Text = "Nam", Value = "True"},
                    new SelectListItem {Text = "Nữ", Value = "False"},
                }, "Value", "Text");
        }
        <div class="form-group">
            <label class="control-label col-md-2">Giới Tính</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.GioiTinh, selectList, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GioiTinh, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
            <span class="col-md-4" id="email"></span>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Địa Chỉ</label>
            <div class="col-md-6">
                @Html.EditorFor(model => model.DiaChi, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DiaChi, "", new { @class = "text-danger" })
            </div>
            <span class="col-md-4" id="diachi"></span>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Lưu" class="btn btn-default" />
            </div>
        </div>
    </div>
            }
<div>
    @Html.ActionLink("Trở Về", "Index")
</div>
<script>
    function IsCheck() {
        var rs = true;
    var x = document.getElementById("Ho").value;
    if (x == "") {
        document.getElementById("ho").innerHTML = "Không được để trống";
        rs = false;
    }
    else {
        document.getElementById("ho").innerHTML = "";
    }

    var x = document.getElementById("Ten").value;
    if (x == "") {
        document.getElementById("ten").innerHTML = "Không được để trống";
        rs = false;
    }
    else {
        document.getElementById("ten").innerHTML = "";
    }
    var x = document.getElementById("DiaChi").value;
    if (x == "") {
        document.getElementById("diachi").innerHTML = "Không được để trống";
        rs = false;
    }
    else {
        document.getElementById("diachi").innerHTML = "";
    }
    var x = document.getElementById("SoDienThoai").value;
    var sdt = isNaN(x);
    if (x == "") {
        document.getElementById("sdt").innerHTML = "Không được để trống";
        rs = false;
    }
    else {
        document.getElementById("sdt").innerHTML = "";
    }
    if (sdt == true){
        document.getElementById("sdt").innerHTML = "Chỉ Nhập Số";
        rs = false;
    }

    var x = document.getElementById("Email").value;
    if (x == "") {
        document.getElementById("email").innerHTML = "Không được để trống";
        rs = false;
    }
    else {
        document.getElementById("email").innerHTML = "";
    }   
    return rs;

}
</script>

